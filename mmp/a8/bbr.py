import torch
import numpy as np

from ..a3.annotation import AnnotationRect


def get_bbr_loss(
    anchor_boxes: torch.Tensor,
    adjustments: torch.Tensor,
    groundtruths: torch.Tensor,
):
    """
    @param anchor_boxes: Batch of box coordinates from the anchor grid
    @param adjustments: Batch of adjustments of the prediction (#data, 4)
    @param groundtruths: Batch of ground truth data given as (x1, y1, x2, y2) (#data, 4)
    """
    
    loss_offset_x = 0
    loss_offset_y = 0
    loss_scale_width = 0
    loss_scale_height = 0

    for i, (anchor, out, gt) in enumerate(zip(anchor_boxes, adjustments, groundtruths)):
        
        anchor_x1 = anchor[0]
        anchor_y1 = anchor[1]
        anchor_x2 = anchor[2]
        anchor_y2 = anchor[3]
        
        out_offset_x = out[0]
        out_offset_y = out[1]
        out_scale_width = out[2]
        out_scale_height = out[3]

        gt_x1 = gt[0]
        gt_y1 = gt[1]
        gt_x2 = gt[2]
        gt_y2 = gt[3]

        loss_offset_x += (out_offset_x - (gt_x1 - anchor_x1) / (anchor_x2 - anchor_x1)) ** 2
        loss_offset_y += (out_offset_y - (gt_y1 - anchor_y1) / (anchor_y2 - anchor_y1)) ** 2
        loss_scale_width = (out_scale_width - (abs(gt_x2 - gt_x1) / abs(anchor_x2 - anchor_x1))) ** 2
        loss_scale_height = (out_scale_height - (abs(gt_y2 - gt_y1) / abs(anchor_y2 - anchor_y1))) ** 2

    return loss_offset_x + loss_offset_y + loss_scale_width + loss_scale_height

def apply_bbr(anchor_box: np.ndarray, adjustment: torch.Tensor) -> AnnotationRect:
    """Calculates an AnnotationRect based on a given anchor box and adjustments

    @param anchor_box: Single box coordinates from the anchor grid
    @param adjustment: Adjustments, generated by the model
    """

    x1 = anchor_box[0]
    y1 = anchor_box[1]
    x2 = anchor_box[2]
    y2 = anchor_box[3]

    offset_x = adjustment[0]
    offset_y = adjustment[1]
    scale_width = adjustment[2]
    scale_height = adjustment[3]

    new_x1 = x1 + offset_x * (x2 - x1)
    new_y1 = y1 + offset_y * (y2 - y1)

    return AnnotationRect(
        new_x1,
        new_y1,
        scale_width * (x2 - x1) + new_x1,
        scale_height * (y2 - y1) + new_y1
    )